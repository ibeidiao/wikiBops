<root>
  <map id="addUser">
    insert into User 
    (loginName, password, nickName, createTime, modifyTime, creatorId) 
      values 
    (#{loginName},#{password},#{nickName},#{createTime}, #{modifyTime}, #{creatorId})
  </map>
  <map id="getUserList">
    select 
    a.id, 
    a.loginName as loginName, 
    a.nickName as nickName, 
    a.email as email, 
    a.mobile as mobile, 
    a.gender as gender, 
    a.role as role, 
    a.`status` as status, 
    a.createTime as createTime, 
    a.modifyTime as modifyTime, 
    a.creatorId as creatorId,
    b.nickName as creatorName from wiki.User a, wiki.User b 
    <where>
      a.creatorId = b.id
      <if test="@notEmpty(this.filter)">
        and (a.loginName = #{filter} or a.nickName = #{filter} or a.email = #{filter} or a.mobile = #{filter})
      </if>
      <if test="@notEmpty(this.id)">
        and a.id = #{id}
      </if>
      <if test="@notEmpty(this.loginName)">
        and a.loginName = #{loginName}
      </if>
      <if test="@notEmpty(this.nickName)">
        and a.nickName = #{nickName}
      </if>
    </where>
    limit #{offset},#{pageSize}
  </map>
  <map id="getUserList-C">
    select count(*) as count from wiki.User a, wiki.User b 
    <where>
      a.creatorId = b.id
      <if test="@notEmpty(this.filter)">
        and (a.loginName = #{filter} or a.nickName = #{filter} or a.email = #{filter} or a.mobile = #{filter})
      </if>
      <if test="@notEmpty(this.id)">
        and a.id = #{id}
      </if>
      <if test="@notEmpty(this.loginName)">
        and a.loginName = #{loginName}
      </if>
      <if test="@notEmpty(this.nickName)">
        and a.nickName = #{nickName}
      </if>
    </where>
  </map>
  <map id="updateUser">
    update User
    <set>
      modifyTime = #{modifyTime}
      <if test="@notEmpty(this.password)">
        , password = #{password}
      </if>
      <if test="@notEmpty(this.email)">
        , email = #{email}
      </if>
      <if test="@notEmpty(this.mobile)">
        , mobile = #{mobile}
      </if>
      <if test="@notEmpty(this.gender)">
        , gender = #{gender}
      </if>
      <if test="@notEmpty(this.nickName)">
        , nickName = #{nickName}
      </if>
      <if test="@notEmpty(this.role)">
        , role = #{role}
      </if>
      <if test="@notEmpty(this.status)">
        , status = #{status}
      </if>
    </set>
    <where>
      id = #{id}
    </where>
  </map>
  <map id="getUserOptions">
    select id, loginName, nickName from User
    <where>
      1 = 1
      <if test="@notEmpty(this.filter)">
        and ( loginName LIKE #{filter} or nickName LIKE #{filter} )
      </if>
    </where>
  </map>
</root>