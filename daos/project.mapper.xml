<root>
  <map id="addProject">
    insert into Project 
    (name, description, creatorId, ownerId, updaterId, createTime, modifyTime) 
      values 
    (#{name},#{description},#{creatorId},#{ownerId}, #{updaterId}, #{createTime}, #{modifyTime})
  </map>
  <map id="addProjectUserRelation">
    insert into ProjectUserRelation
    (projectId, userId, type, createTime, modifyTime)
      values
    (#{projectId}, #{userId}, #{type}, #{createTime}, #{modifyTime})
  </map>
  <map id="getProjectList">
    select 
    a.id, 
    a.name as name, 
    a.description as description, 
    a.creatorId as creatorId, 
    a.ownerId as ownerId, 
    c.nickName as ownerName, 
    a.updaterId as updaterId, 
    d.nickName as updaterName, 
    a.createTime as createTime, 
    a.modifyTime as modifyTime,
    b.type as type from Project a, ProjectUserRelation b, User c, User d
    <where>
      b.projectId = a.id and c.id = a.ownerId and d.id = a.updaterId and b.userId = #{userId}
      <if test="@notEmpty(this.filter)">
        and (a.name = #{filter} or c.nickName = #{filter})
      </if>
      <if test="@notEmpty(this.ownerId)">
        and a.ownerId = #{ownerId}
      </if>
    </where>
    limit #{offset},#{pageSize}
  </map>
  <map id="getProjectList-C">
    select count(*) as count from Project a, ProjectUserRelation b, User c, User d
    <where>
      b.projectId = a.id and c.id = a.ownerId and d.id = a.updaterId and b.userId = #{userId}
      <if test="@notEmpty(this.filter)">
        and (a.name = #{filter} or c.nickName = #{filter})
      </if>
      <if test="@notEmpty(this.ownerId)">
        and a.ownerId = #{ownerId}
      </if>
    </where>
  </map>
  <map id="updateProject">
    update Project
    <set>
      modifyTime = #{modifyTime}
      <if test="@notEmpty(this.name)">
        , name = #{name}
      </if>
      <if test="@notEmpty(this.status)">
        , status = #{status}
      </if>
      <if test="@notEmpty(this.description)">
        , description = #{description}
      </if>
    </set>
    <where>
      id = #{id}
    </where>
  </map>
  <map id="getProjectInfo">
    select 
    a.id as id,
    a.name as name,
    a.description as description,
    a.creatorId as creatorId,
    b.nickName as creatorName,
    a.ownerId as ownerId,
    c.nickName as ownerName,
    a.createTime as createTime,
    a.modifyTime as modifyTime,
    a.status as status from Project a, User b, User c
    where a.creatorId = b.id and a.ownerId = c.id and a.id = #{id}
  </map>
  <map id="getProjectUserRelationList">
    select
    a.id as id,
    a.projectId as projectId,
    a.userId as userId,
    a.type as type,
    b.nickName as nickName,
    b.loginName as loginName,
    a.createTime as createTime from ProjectUserRelation a, User b
    where a.projectId = #{id} and a.status = 0 and b.status = 0 and a.userId = b.id
  </map>
  <map id="updateProjectUserRelation">
    update ProjectUserRelation
    <set>
      modifyTime = #{modifyTime}
      <if test="@notEmpty(this.status)">
        , status = #{status}
      </if>
      <if test="@notEmpty(this.type)">
        , type = #{type}
      </if>
    </set>
    <where>
      id = #{id}
    </where>
  </map>
  <map id="getProjectOwnerRelationId">
    select 
    id from ProjectUserRelation
    where type = 1 and projectId = #{projectId}
  </map>
</root>